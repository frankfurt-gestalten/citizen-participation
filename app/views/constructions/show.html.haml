= title @construction.title

.row.construction.show
  .large-8.columns
    %h1
      %span.backicon.construction-back
        .fa.fa-warning
      = @construction.title
    %p
      = @construction.description_long.html_safe
    %p
      %span.smaller-font
        Diese Informationen werden Ihnen bereitgestellt von:
        %br
        Stadt Frankfurt am Main, StraÃŸenverkehrsamt
        Lizenz:
        %a{href: "https://www.govdata.de/dl-de/by-2-0", target: "_blank"}
          Datenlizenz Deutschland - Namensnennung - Version 2.0
        %br
        %a{href: "http://www.frankfurt-gestalten.de/impressum"}
          Weitere Informationen
    %p
      %b
        #{pluralize(@construction.comments.count(:id), "Kommentar")}

    - if @comments.present?
      = nested_messages @comments if @comments
    %h4
      Kommentar
    = render :partial => "comments/form", :locals => {:commentable => @construction}
  .large-4.columns
    .row
      .large-12.columns
        - if can? :edit, @construction
          = link_to "Bearbeiten", edit_construction_path(@construction), :class => 'small button secondary edit pull-right'
        - if can? :destroy, @construction
          = link_to 'X', @construction, :confirm => "Sind Sie sich sicher?", :method => :delete, :class => 'small button delete pull-right'
    %h2
      Baustelle
    #map{:style => "width: auto; height: 350px; border: 1px solid #ccc;"}
    .shape.bright-grey
      = render 'initiatives/social_media_buttons', url: @construction

- if @construction
  = content_for :footer do
    :javascript
      var map = new L.Map('map').setView(new L.LatLng(#{@construction.lat}, #{@construction.long}), 17);
      var mapboxUrl = 'http://{s}.tiles.mapbox.com/v3/okf.map-najwtvl1/{z}/{x}/{y}.png',
          mapbox = new L.TileLayer(mapboxUrl, {"attribution": "\u00a9 <a href=\"http://www.openstreetmap.org/\" target=\"_blank\">OpenStreetMap</a> contributors"});
      map.addLayer(mapbox,true);
      map.scrollWheelZoom.disable();
      L.Icon.Default.imagePath = '/assets';

    %script{ :type => 'text/javascript' }
      - if @construction.lat.present?
        var icon = L.AwesomeMarkers.icon({prefix: 'fa', icon: 'warning', markerColor: 'green', iconColor: '#ffffff'});
        marker = L.marker([#{@construction.lat}, #{@construction.long}], { icon: icon }).addTo(map);
